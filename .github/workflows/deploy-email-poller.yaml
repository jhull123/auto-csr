name: Deploy Email Poller Lambda
description: Deploys the Email Poller Lambda function to AWS using CloudFormation.

on:
  push:
    branches:
      - main
    paths:
      - 'email-poller/**'
      - '.github/workflows/deploy-email-poller.yaml'
  workflow_dispatch:

env:
  REGION: us-east-1
  STACK_NAME: email-poller-stack-v2
  BUCKET_NAME: auto-csr-lambda-code-v2
  CODE_KEY: email-poller/email-poller-${{ github.sha }}.zip
  TEMPLATE_PATH: email-poller/template.yaml
  ZIP_PATH: email-poller-${{ github.sha }}.zip

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies and zip Lambda package
        run: |
          mkdir -p package
          pip install -r email-poller/requirements.txt -t package
          cp email-poller/*.py package/
          cd package
          zip -r ../${ZIP_PATH} .
          cd ..

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}

      - name: Create bucket if it doesn't exist
        run: |
          if ! aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
            echo "Bucket does not exist. Creating: $BUCKET_NAME"
            if [ "$REGION" = "us-east-1" ]; then
              aws s3api create-bucket \
                --bucket "$BUCKET_NAME"
            else
              aws s3api create-bucket \
                --bucket "$BUCKET_NAME" \
                --region "$REGION" \
                --create-bucket-configuration LocationConstraint="$REGION"
            fi

            # Add a lifecycle rule to delete old Lambda ZIPs after 7 days
            aws s3api put-bucket-lifecycle-configuration \
              --bucket "$BUCKET_NAME" \
              --lifecycle-configuration '{
                "Rules": [
                  {
                    "ID": "DeleteOldLambdaZips",
                    "Prefix": "email-poller/",
                    "Status": "Enabled",
                    "Expiration": {
                      "Days": 7
                    }
                  }
                ]
              }'
          else
            echo "Bucket already exists: $BUCKET_NAME"
          fi

      - name: Upload Lambda zip to S3
        run: |
          aws s3 cp $ZIP_PATH s3://$BUCKET_NAME/$CODE_KEY

      - name: Deploy CloudFormation stack
        run: |
          aws cloudformation deploy \
            --stack-name $STACK_NAME \
            --template-file $TEMPLATE_PATH \
            --parameter-overrides \
              CodeBucket=$BUCKET_NAME \
              CodeKey=$CODE_KEY \
            --capabilities CAPABILITY_NAMED_IAM

      - name: Trigger Lambda once after deploy
        run: |
          aws lambda invoke \
            --function-name email-poller \
            --payload '{}' \
            /dev/stdout
