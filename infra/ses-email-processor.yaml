AWSTemplateFormatVersion: '2010-09-09'
Description: SES Email Receiver + Auto-Reply via Lambda (Python 3.10) with External Lambda Code

Parameters:
  VerifiedRecipientEmail:
    Type: String
    Description: The verified email address to receive messages

  ReplyFromEmail:
    Type: String
    Description: Verified sender email address for replies

  LambdaCodeS3Bucket:
    Type: String
    Description: S3 bucket where lambda-package.zip is stored

  LambdaCodeS3Key:
    Type: String
    Default: lambda-package.zip
    Description: S3 key of the zipped Lambda package

Resources:
  EmailBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "ses-incoming-${AWS::AccountId}"

  EmailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref EmailBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowSESPuts
            Effect: Allow
            Principal:
              Service: ses.amazonaws.com
            Action: "s3:PutObject"
            Resource: !Sub "${EmailBucket.Arn}/*"
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref AWS::AccountId

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: SESLambdaExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaS3SesAndLogsAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub "${EmailBucket.Arn}/*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - ses:SendEmail
                  - ses:SendRawEmail
                Resource: "*"

  EmailProcessingLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: sesEmailProcessor
      Handler: index.lambda_handler
      Runtime: python3.10
      Role: !GetAtt LambdaExecutionRole.Arn
      Timeout: 10
      Environment:
        Variables:
          REPLY_FROM_EMAIL: !Ref ReplyFromEmail
      Code:
        S3Bucket: !Ref LambdaCodeS3Bucket
        S3Key: !Ref LambdaCodeS3Key

  SESLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref EmailProcessingLambda
      Action: lambda:InvokeFunction
      Principal: ses.amazonaws.com
      SourceAccount: !Ref AWS::AccountId

  SESRuleSet:
    Type: AWS::SES::ReceiptRuleSet
    Properties:
      RuleSetName: EmailProcessingRuleSet

  SESReceiptRule:
    Type: AWS::SES::ReceiptRule
    Properties:
      RuleSetName: !Ref SESRuleSet
      Rule:
        Name: ReceiveAndProcessEmails
        Enabled: true
        Recipients:
          - !Ref VerifiedRecipientEmail
        Actions:
          - S3Action:
              BucketName: !Ref EmailBucket
              ObjectKeyPrefix: "incoming/"
          - LambdaAction:
              FunctionArn: !GetAtt EmailProcessingLambda.Arn
              InvocationType: Event
        ScanEnabled: true
        TlsPolicy: Optional

Outputs:
  EmailBucketName:
    Description: S3 bucket for incoming emails
    Value: !Ref EmailBucket

  LambdaFunctionName:
    Description: Lambda function name
    Value: !Ref EmailProcessingLambda
